<?php

/**
 * @file
 * Provides the Bank Transfer payment method for use in Drupal Commerce.
 */


/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_bank_transfer_commerce_payment_method_info() {
  $payment_methods = array();

  $payment_methods['bank_transfer'] = array(
    'base' => 'commerce_bank_transfer',
    'title' => t('Bank Transfer'),
    'description' => t('Receive direct money transfers initiated by the customer to your bank account.'),
  );

  return $payment_methods;
}

/**
 * Payment method callback: settings form.
 */
function commerce_bank_transfer_settings_form($settings = NULL) {
  $form = array();

  // Merge default settings into the stored settings array.
  $settings = (array) $settings + array(
    'commerce_bank_transfer_bank_code_appellation' => 'Bank code',
    'commerce_bank_transfer_subject_oid' => FALSE,
  );

  // help text
  $form['commerce_bank_transfer_help_text'] = array(
    '#markup' => '<div class="help">' . t('<h4><strong>Setup instructions</strong></h4><p>For better customer experience please use the token [order-payment-bank-details] to display the bank details on the invoice. You can find an example invoice template doing this in the commerce_bank_transfer module folder.</p><p>Enter the bank account details to display to customers who choose this payment method during checkout. Details left empty will not be shown. You can also choose to leave all bank details empty and create your own output using the payment instructions.</p>') . '</div>', // TODO update needed - this is how Ubercart worked...
  );

  // settings
  $form['details'] = array(
    '#type' => 'fieldset',
    '#title' => t('Bank details'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['details']['account_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Account name'),
    '#description' => t('Name associated with bank account.'),
    '#default_value' => isset($settings['details']['account_name']) ? $settings['details']['account_name'] : '', // TODO how do i18n_variables work in D7? this should be one of them..
    '#required' => FALSE,
  );
  $form['details']['account_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Account number'),
    '#default_value' => isset($settings['details']['account_number']) ? $settings['details']['account_number'] : '',
    '#required' => FALSE,
  );
  $form['details']['account_iban'] = array(
    '#type' => 'textfield',
    '#title' => t('IBAN'),
    '#description' => t('International Bank Account Number'),
    '#default_value' => isset($settings['details']['account_iban']) ? $settings['details']['account_iban'] : '',
    '#required' => FALSE,
  );
  $form['details']['bank_code_appellation'] = array(
    '#type' => 'textfield',
    '#title' => t('Bank code appellation'),
    '#description' => t('Appellation of bank code - depending on where your bank is located you should set this to: "BSB" (AU), "Sort code" (UK), "Bank code" (DE), "Clearing number" (CH), "Routing transit number" (US) or "Bank transit number" (CA)'),
    '#default_value' => isset($settings['details']['bank_code_appellation']) ? $settings['details']['bank_code_appellation'] : '',
    '#required' => FALSE,
  );
  $form['details']['bank_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Bank code'),
    '#description' => t('Actual bank code, will be shown with appellation set above'),
    '#default_value' => isset($settings['details']['bank_code']) ? $settings['details']['bank_code'] : '',
    '#required' => FALSE,
  );
  $form['details']['account_swift'] = array(
    '#type' => 'textfield',
    '#title' => t('SWIFT'),
    '#description' => t('SWIFT-Code (aka BIC = Bank Identifier Code)'),
    '#default_value' => isset($settings['details']['account_swift']) ? $settings['details']['account_swift'] : '',
    '#required' => FALSE,
  );
  $form['details']['account_bank'] = array(
    '#type' => 'textfield',
    '#title' => t('Banking institution'),
    '#default_value' => isset($settings['details']['account_bank']) ? $settings['details']['account_bank'] : '',
    '#required' => FALSE,
  );
  $form['details']['account_branch'] = array(
    '#type' => 'textfield',
    '#title' => t('Branch office'),
    '#default_value' => isset($settings['details']['account_branch']) ? $settings['details']['account_branch'] : '',
    '#required' => FALSE,
  );
  $form['subject_oid'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display "Reason for payment: order number <i>[order ID]</i>"'),
    '#description' => t('Note: with this option enabled the details cannot be displayed on the checkout page (only later).'), // TODO update to new mechanism and terminology
    '#default_value' => isset($settings['subject_oid']) ? $settings['subject_oid'] : 0,
  );
  $form['policy'] = array(
    '#type' => 'textarea',
    '#title' => t('Payment instructions'),
    '#description' => t('Instructions for customers on the checkout page. Use &lt;br /&gt; for line break.'),
    '#default_value' => isset($settings['policy']) ? $settings['policy'] : '',
    '#required' => FALSE,
    '#rows' => 3,
  );

  return $form;
}

/**
 * Payment method callback: checkout form.
 */
function commerce_bank_transfer_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $form = array();

  // Merge in values from the order.
  if (!empty($order->data['bank_transfer'])) {
    $pane_values += $order->data['bank_transfer'];
  }

  $form['bank_details'] = array(
  // TODO add message about details will be in email.. but email and token not yet done..
    '#markup' => '<p><strong>' . t('Please make payment to:') . '</strong><br />' . t('Account owner') . ': ' . commerce_bank_transfer_bank_details($order->order_id, $payment_method) . '</p>',
  // TODO "Account owner" was/is the infamouse "To" in uc_bank_transfer depending on how the online and email invoice is looking we can move "Account owner" into commerce_bank_transfer_bank_details()
  // TODO in uc_bank_transfer we sent the details through a theming function - should we still do this?
  );

  return $form;
}

/**
 * Payment method callback: checkout form validation.
 */
function commerce_bank_transfer_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $form_parents = array()) {
  // nothing to validate
}

/**
 * Payment method callback: checkout form submission.
 */
function commerce_bank_transfer_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
//  transfer will be completed manually on reception of transfer
}

/**
 * Implementation of commerce_bank_transfer_bank_details($oid).
 *
 * $oid = order ID
 */
function commerce_bank_transfer_bank_details($oid, $pm) {
  if ($pm['settings']['details']['account_name'] <> '') {
    $bank_info[] = $pm['settings']['details']['account_name'];
  }
  if ($pm['settings']['details']['account_number'] <> '') {
    $bank_info[] = t('Account number') . ': ' . $pm['settings']['details']['account_number'];
  }
  if ($pm['settings']['details']['account_iban'] <> '') {
    $bank_info[] = t('IBAN') . ': ' . $pm['settings']['details']['account_iban'];
  }
  if ($pm['settings']['details']['bank_code'] <> '') {
    $bank_info[] = $pm['settings']['details']['bank_code_appellation'] . ': ' . $pm['settings']['details']['bank_code'];
  }
  if ($pm['settings']['details']['account_swift'] <> '') {
    $bank_info[] = t('SWIFT') . ': ' . $pm['settings']['details']['account_swift'];
  }
  if ($pm['settings']['details']['account_bank'] <> '') {
    $bank_info[] = t('Banking institution') . ': ' . $pm['settings']['details']['account_bank'];
  }
  if ($pm['settings']['details']['account_branch'] <> '') {
    $bank_info[] = t('Branch office') . ': ' . $pm['settings']['details']['account_branch'];
  }
  if ($pm['settings']['subject_oid']) {
    isset($bank_info) ? ($bank_info[] = '<br />' . t('Reason for payment') . ': ' . t('order number') . ' ' . $oid) : ($bank_info[] = t('Reason for payment') . ': ' . t('order number') . ' ' . $oid);
  }
  if ($pm['settings']['policy'] <> '') {
    isset($bank_info) ? ($bank_info[] = '<br />' . $pm['settings']['policy']) : ($bank_info[] = $pm['settings']['policy']);
  }

  isset($bank_info) ? ($bank_details = implode('<br />', $bank_info)) : ($bank_details = '');

  return $bank_details;
}

